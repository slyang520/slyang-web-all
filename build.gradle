/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'slyang' at '17-9-3 上午8:46' with Gradle 3.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

apply from: 'version.gradle'
def profile = System.getProperty("profile") ?: "local"

allprojects {

    task printlnProjectName << {
        println project.name
    }

}

subprojects {

    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'java'

    appConfig = appConfig
    libConfig = libConfig

    sourceCompatibility = appConfig.sourceCompatibility
    targetCompatibility = appConfig.targetCompatibility

    repositories {
        mavenLocal()
        //mavenCentral()
        //jcenter()
        //google()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url "https://jitpack.io" }
    }

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    buildscript {
        repositories {
            maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
            maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
            maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${libConfig.springBootVersion}")
        }
    }

}

// app01 工程配置
project(':service-app01') {

    sourceSets {
        main {
            resources.srcDirs = ['src/main/resources',
                                 "src/main/resources-${profile}"]
        }
    }

}

// configcenter 工程配置
project(':service-configcenter') {

    sourceSets {
        main {
            resources.srcDirs = ['src/main/resources',
                                 "src/main/resources-${profile}"]
        }
    }

}

// sso 工程配置
project(':service-sso') {

    sourceSets {
        main {
            resources.srcDirs = ['src/main/resources',
                                 "src/main/resources-${profile}"]
        }
    }

}

// eureka 工程配置
project(':service-eureka') {

    sourceSets {
        main {
            resources.srcDirs = ['src/main/resources',
                                 "src/main/resources-${profile}"]
        }
    }

}